#!/bin/bash
set -e # exit on failure

PROJECT_ARCH=arm64
PROJECT_VERSION=1.0-2 
PROJECT_NAME=jethome-get-efuse-keys
source /tmp/overlay/packages/common_package_mkdir

USR_BIN=$PACKAGE_NAME/usr/bin
mkdir --mode=0755 -p -v $USR_BIN

compile_get_efuse_keys() {
  local GET_EFUSE=get_efuse_
  local RAW_NAME=${GET_EFUSE}raw_key
  local MAC_NAME=${GET_EFUSE}key_mac
  local USID_NAME=${GET_EFUSE}key_usid
  local SERIAL_NAME=${GET_EFUSE}key_serial
  local SRC_DIR=/tmp/overlay/packages/$PROJECT_NAME
  local GCC_ARGS="-s -Wall -Wextra -std=c++17"

  g++ $GCC_ARGS $SRC_DIR/$RAW_NAME.cpp -o $USR_BIN/$RAW_NAME
  g++ $GCC_ARGS $SRC_DIR/$MAC_NAME.cpp -o $USR_BIN/$MAC_NAME
  g++ $GCC_ARGS $SRC_DIR/$USID_NAME.cpp -o $USR_BIN/$USID_NAME
  g++ $GCC_ARGS $SRC_DIR/$SERIAL_NAME.cpp -o $USR_BIN/$SERIAL_NAME
}

compile_get_efuse_keys

mkdir -p -v $PACKAGE_NAME/DEBIAN

# You can see package versions by command: apt-cache policy libc6
# You can see examples of Depends versions by command: dpkg -s bash

cat <<-EOF > $PACKAGE_NAME/DEBIAN/control
Package: $PROJECT_NAME
Version: $PROJECT_VERSION
Section: utils
Priority: optional
Architecture: $PROJECT_ARCH
Depends: libc6 (>= 2.27)
Maintainer: Example Examplov <example@example.com>
Description: Utilities to get efuse keys
 Binary utilities to get nvmem efuse keys usid, mac, ...
EOF

source /tmp/overlay/packages/common_package_create_install_cleanup
